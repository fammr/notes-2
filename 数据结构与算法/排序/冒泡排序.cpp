# include <iostream>

using namespace std;
/*
2017年3月19日18:28:17
冒泡排序

算法稳定
此冒泡排序总的平均时间复杂度为O(n^2) 

算法原理
冒泡排序算法的运作如下：（从后往前）
比较相邻的元素。如果第一个比第二个大，就交换他们两个。
对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对。在这一点，最后的元素应该会是最大的数。
针对所有的元素重复以上的步骤，除了最后一个。
持续每次对越来越少的元素重复上面的步骤，直到没有任何一对数字需要比较。
 
*/ 

void bubble_sort(int a[], int n)
{
	int i,j,t; 
	for(i=0; i<n; i++)
	{
		for(j=0; j<n-i-1; j++)   //已排序好了的就不进行比较 
		{
			if(a[j]>a[j+1])   //比较相邻元素的大小 
			{
				t = a[j];
				a[j] = a[j+1];
				a[j+1] = t;
			}
		}
	}
}

int main(void)
{
	int number[8] = {95, 45, 15, 78, 84, 51, 24, 12};
	bubble_sort(number,8);
	for(int i=0; i<8; i++)
	{
		cout<<number[i]<<" ";
	}
	
	
	return 0;
} 
